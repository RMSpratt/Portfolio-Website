[
  {
    "Type": "TextSection",
    "Header": "Lua Programmer",
    "HeadingParagraphs": [
      "My work on Roblox is primarily focused in programming. I currently work for a couple development groups and otherwise accept programming commissions."
    ],
    "Subsections": [
      {
        "Type": "ListSection",
        "Header": "Programming Contributions",
        "Items": [
          "Outerworld Productions",
          "Diabolical GameMakers",
          "SuperSocial",
          "<a href='https://www.roblox.com/games/14967585086/Anime-Outfit-Shop-1000'>Anime Outfit Shop</a>"
        ]
      }
    ],
    "FooterParagraphs": ["A selection of my work organized by category can be found below."]
  },
  {
    "Type": "NavSection",
    "Header": "Past Works",
    "HeadingParagraphs": [
      "Select one of the topics below to showcase project work for that category."
    ],
    "Items": [
      {
        "NavHeader": "AI Programming",
        "NavContent": [
          {
            "Type": "TextSection",
            "Header": "State Machine",
            "HeadingParagraphs": [
              "A flat Luau-based StateMachine framework for managing state-based character and object behaviours."
            ],
            "Subsections": [
              {
                "Type": "TextSection",
                "Header": "Development",
                "HeadingParagraphs": [
                  "This StateMachine framework was created in an effort to port over a similar implementation made for use in Unity.",
                  "The goal for the framework was to create a simple StateMachine that didn't require explicit definitions for functions and available data."
                ]
              },
              {
                "Type": "ListSection",
                "Header": "Highlights",
                "Items": [
                  "Blackboard Architecture for Knowledge Representation",
                  "Full Type Definitions for StateMachine Components",
                  "Support for Shared and Independent Facts about the Environment",
                  "Support for Tree-like Condition Structures for Decision-Making",
                  "No External Coding Dependencies"
                ]
              },
              {
                "Type": "LinkSection",
                "Header": "Github",
                "LinkItems": [
                  {
                    "Id": "Github-SM-Link",
                    "Label": "More Information",
                    "Href": "https://github.com/RMSpratt/Roblox-State-Machine",
                    "LinkText": "https://github.com/RMSpratt/Roblox-State-Machine"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "NavHeader": "System Design",
        "NavContent": [
          {
            "Type": "TextSection",
            "Header": "Tycoon Framework",
            "HeadingParagraphs": [
              "Reusable framework for describing and managing Tycoons fitting the traditional Roblox-based 'Tycoon' genre."
            ],
            "Subsections": [
              {
                "Type": "MediaGallerySection",
                "Header": "Development",
                "HeadingParagraphs": [
                  "The motivation for this project was to employ the single responsibility principle for traditional OOP classes for ModuleScript components. To avoid tight coupling between non-Tycoon ModuleScripts with those within the Tycoon, a subscription-based data updating system was used to allow any Script to read and update the latest Tycoon data."
                ],
                "Media": [
                  {
                    "Name": "TycoonStructure-UML.svg"
                  },
                  {
                    "Name": "TycoonClientDataRequest.svg"
                  }
                ],
                "FooterParagraphs": [
                  "The diagrams above were created during development to illustrate how the structure of the framework as well as how initialization and communication are handled."
                ]
              },
              {
                "Type": "ListSection",
                "Header": "Highlights",
                "Items": [
                  "Component-based Tycoon framework using Lua tables",
                  "Ability to observe and modify Tycoon data through safe requests",
                  "Subscription-based data updates for Tycoon instances using proxy tables",
                  "Data integrity checks for requests to update and write to Tycoon data",
                  "Client-Server Communication achieved using the open-source framework <a href='https://sleitnick.github.io/Knit/'>Knit</a>"
                ]
              },
              {
                "Type": "LinkSection",
                "Header": "Github",
                "LinkItems": [
                  {
                    "Id": "Github-Tycoon-Link",
                    "Label": "More Information",
                    "Href": "https://github.com/RMSpratt/Roblox-Portfolio-Projects/tree/main/Tycoon%20Framework",
                    "LinkText": "https://github.com/RMSpratt/RobloxTycoonFramework"
                  }
                ]
              }
            ]
          },
          {
            "Type": "TextSection",
            "Header": "Dialog System",
            "HeadingParagraphs": [
              "A runtime dialog system for character dialog and unnamed speaker dialog prompts."
            ],
            "Subsections": [
              {
                "Type": "MediaGallerySection",
                "Header": "Development",
                "HeadingParagraphs": [
                  "This system was designed for use in a larger project to support character dialog with the ability to branch according to manual choices and hidden progression-based influences.",
                  "A compact grammar lexicon is used to define dialog trees through text in a spreadsheet before being unpacked into a nested table format for Roblox to interpret."
                ],
                "Media": [
                  {
                    "Name": "Roblox-Dialog-System-Scripts.svg",
                    "Caption": "System Script (Table) Entities"
                  },
                  {
                    "Name": "Roblox-Dialog-System-Load-Dialog.svg",
                    "Caption": "Load Dialog Sequence Diagram"
                  },
                  {
                    "MediaType": "Video",
                    "Name": "Roblox-Dialog-System-Options.mp4",
                    "Caption": "Demonstration of Branching Dialog"
                  }
                ]
              },
              {
                "Type": "ListSection",
                "Header": "Features",
                "Items": [
                  "Dialog Tree Structure defined with a parsed language grammar",
                  "Branching dialog options dictated by player choices",
                  "Conditional dialog based on external game data",
                  "Forwards and Backwards dialog navigation",
                  "Support for automatic dialog navigation"
                ]
              },
              {
                "Type": "LinkSection",
                "Header": "Github",
                "LinkItems": [
                  {
                    "Id": "Github-DialogSystem-Rblx-Link",
                    "Label": "More Information",
                    "Href": "https://github.com/RMSpratt/Roblox-Portfolio-Projects/tree/main/DialogSystem",
                    "LinkText": "https://github.com/RMSpratt/RobloxDialogSystem"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "NavHeader": "UI Programming",
        "NavContent": [
          {
            "Type": "TextSection",
            "Header": "Leaderboards",
            "HeadingParagraphs": [
              "A selection of some work in creating global leaderboards are highlighted below."
            ],
            "Subsections": [
              {
                "Type": "MediaGallerySection",
                "Header": "Animations",
                "Media": [
                  {
                    "Name": "Global-Leaderboard-Update.gif"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "NavHeader": "Miscellaneous",
        "NavContent": [
          {
            "Type": "MediaGallerySection",
            "Header": "Reworking Gear",
            "HeadingParagraphs": [
              "My earliest work in Lua programming for Roblox was done fixing Gear items that were broken over the years by Roblox engine updates.",
              "These tools are filtering-enabled ready, and compatible with R6 <em>and</em> R15 character rigs."
            ],
            "Media": [
              {
                "MediaType": "Video",
                "Name": "Roblox-8bitSword.mp4",
                "Caption": "8-bit Sword"
              },
              {
                "MediaType": "Video",
                "Name": "Roblox-ChameleonPotion.mp4",
                "Caption": "Chameleon Potion"
              },
              {
                "MediaType": "Video",
                "Name": "Roblox-SnowballCannon.mp4",
                "Caption": "Snowball Cannon"
              }
            ],
            "FooterParagraphs": [
              "The code for each tool is open-source and available on <a href='https://github.com/RMSpratt/Roblox-Portfolio-Projects/tree/main/Tools'>Github.</a>"
            ]
          }
        ]
      }
    ]
  }
]
